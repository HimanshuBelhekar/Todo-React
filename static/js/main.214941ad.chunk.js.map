{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","className","onSubmit","e","preventDefault","trim","uuid","TextField","label","type","name","value","onChange","target","Button","Todo","toggleComplete","removeTodo","ListItem","style","display","Checkbox","checked","onClick","Typography","variant","textDecoration","IconButton","TodoList","todos","List","map","LOCAL_STORAGE_KEY","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","padding","ToDoForm","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAyCeA,MArCf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACLC,mBAAS,CAC/BC,GAAI,GACJC,KAAM,GACNC,WAAW,IAJgB,mBACtBC,EADsB,KAChBC,EADgB,KAuB7B,OACE,uBAAMC,UAAU,YAAYC,SAX9B,SAAsBC,GACpBA,EAAEC,iBAGEL,EAAKF,KAAKQ,SACZX,EAAQ,2BAAKK,GAAN,IAAYH,GAAIU,iBACvBN,EAAQ,2BAAKD,GAAN,IAAYF,KAAM,QAK3B,UACE,cAACU,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,OACLC,KAAK,OACLC,MAAOZ,EAAKF,KACZe,SAvBN,SAA+BT,GAG7BH,EAAQ,2BAAKD,GAAN,IAAYF,KAAMM,EAAEU,OAAOF,YAsBhC,cAACG,EAAA,EAAD,CAAQL,KAAK,SAAb,0B,8DCLSM,MA3Bf,YAAqD,IAArChB,EAAoC,EAApCA,KAAMiB,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WASpC,OACE,eAACC,EAAA,EAAD,CAAUC,MAAO,CAAEC,QAAS,QAA5B,UACE,cAACC,EAAA,EAAD,CAAUC,QAASvB,EAAKD,UAAWyB,QAVvC,WACEP,EAAejB,EAAKH,OAUlB,cAAC4B,EAAA,EAAD,CACEC,QAAQ,QACRN,MAAO,CACLO,eAAgB3B,EAAKD,UAAY,eAAiB,MAHtD,SAMGC,EAAKF,OAER,cAAC8B,EAAA,EAAD,CAAYJ,QAfhB,WACEN,EAAWlB,EAAKH,KAcd,SACE,cAAC,IAAD,UCNOgC,MAff,YAA0D,IAAtCC,EAAqC,EAArCA,MAAOZ,EAA8B,EAA9BA,WAAYD,EAAkB,EAAlBA,eACrC,OACE,cAACc,EAAA,EAAD,UACGD,EAAME,KAAI,SAAAhC,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNkB,WAAYA,EACZD,eAAgBA,GAHXjB,EAAKH,UCHdoC,EAAoB,wBAgDXC,MA9Cf,WAAgB,IAAD,EAEatC,mBAAS,IAFtB,mBAENkC,EAFM,KAECK,EAFD,KAqCb,OAjCAC,qBAAU,WACR,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQR,IAClDI,GACDF,EAASE,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUb,MACtD,CAACA,IAyBF,sBAAK5B,UAAU,WAAf,UACE,cAACuB,EAAA,EAAD,CAAYL,MAAO,CAACwB,QAAQ,IAAKlB,QAAQ,KAAzC,yBACA,cAACmB,EAAD,CAAUlD,QAzBd,SAAiBK,GACfmC,EAAS,CAACnC,GAAF,mBAAW8B,QAyBjB,cAAC,EAAD,CAAUA,MAAOA,EAAOb,eAtB5B,SAAwBpB,GACtBsC,EACEL,EAAME,KAAI,SAAAhC,GACR,OAAIA,EAAKH,KAAOA,EACd,2BACKG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OAa+CkB,WAR5D,SAAoBrB,GAClBsC,EAASL,EAAMgB,QAAO,SAAA9C,GAAI,OAAIA,EAAKH,KAAOA,aCrC9CkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.214941ad.chunk.js","sourcesContent":["import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [todo, setTodo] = useState({\r\n    id: \"\",\r\n    task: \"\",\r\n    completed: false\r\n  });\r\n\r\n  function handleTaskInputChange(e) {\r\n    // e.target.value contains new input from onChange\r\n    // event for input elements\r\n    setTodo({ ...todo, task: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault(); \r\n    // prevents browser refresh\r\n    // trim() gets rid of string whitespace\r\n    if (todo.task.trim()) {\r\n      addTodo({ ...todo, id: uuid() });\r\n      setTodo({ ...todo, task: \"\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Task\"\r\n        type=\"text\"\r\n        name=\"task\"\r\n        value={todo.task}\r\n        onChange={handleTaskInputChange}\r\n      />\r\n      <Button type=\"submit\">Add Todo</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React from \"react\";\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo }) {\r\n  function handleCheckboxClick() {\r\n    toggleComplete(todo.id);\r\n  }\r\n\r\n  function handleRemoveClick() {\r\n    removeTodo(todo.id);\r\n  }\r\n\r\n  return (\r\n    <ListItem style={{ display: \"flex\" }}>\r\n      <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{\r\n          textDecoration: todo.completed ? \"line-through\" : null\r\n        }}\r\n      >\r\n        {todo.task}\r\n      </Typography>\r\n      <IconButton onClick={handleRemoveClick}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default Todo;","import { List } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Todo from \"./ToDo\";\r\n\r\nfunction TodoList({ todos, removeTodo, toggleComplete }) {\r\n  return (\r\n    <List>\r\n      {todos.map(todo => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          removeTodo={removeTodo}\r\n          toggleComplete={toggleComplete}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport ToDoForm from './components/ToDoForm';\nimport TodoList from './components/ToDoList';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id){\n          return{\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"todo-app\">\n      <Typography style={{padding:16}} variant=\"h1\">React Todos</Typography>\n      <ToDoForm addTodo={addTodo} />\n      <TodoList todos={todos} toggleComplete={toggleComplete} removeTodo={removeTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}